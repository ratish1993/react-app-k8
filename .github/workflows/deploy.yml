name: Build and Deploy React App to ECR and ArgoCD

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: reactjs-app-k8
  ECR_REGISTRY: 423623845359.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, Tag, and Push Docker image
      run: |
        COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_SHA .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_SHA

    - name: Update Kubernetes Manifests
      run: |
        COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
        sed -i "s|IMAGE_TAG|$COMMIT_SHA|g" k8s/deployment.yaml

    - name: Sync ArgoCD Application
      uses: clowdhaus/argo-cd-sync-action@v1
      with:
        argocd-server: ${{ secrets.ARGOCD_SERVER }}
        username: ${{ secrets.ARGOCD_USERNAME }}
        password: ${{ secrets.ARGOCD_PASSWORD }}
        app-name: reactjs-app

